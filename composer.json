{
  "name": "AUShealth/saas",
  "description": "A develop container for Australian government department of health SaaS websites.",
  "license": "MIT",
  "authors": [
    {
      "name": "Joshua Li",
      "email": "joshua@lirujia.com"
    }
  ],
  "type": "project",
  "require": {
    "rujiali/acquia-site-factory-cli": "dev-master",
    "drush/drush": "^8.1",
    "wikimedia/composer-merge-plugin": "^1.4.0",
    "composer/installers": "^1.0.20"
  },
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/rujiali/acquia-site-factory-cli"
    }
  ],
  "require-dev": {
    "beet/box": "^0.6.5"
  },
  "scripts": {
    "acsf-test": [
      "./vendor/bin/AcquiaSiteFactoryCli app:ping",
      "./vendor/bin/AcquiaSiteFactoryCli app:listSites",
      "./vendor/bin/AcquiaSiteFactoryCli app:getSiteDetails `grep site_id sitefactory.yml | cut -d' ' -f2`"
    ],
    "build-clean": [
      "rm -rf acsf-backup",
      "rm -rf docroot",
      "rm -rf theme-repo",
      "rm -f acsf-database.sql",
      "rm -f acsf-backup.tar.gz"
    ],
    "acsf-backup": [
      "vendor/bin/AcquiaSiteFactoryCli app:createBackup"
    ],
    "acsf-download": [
      "# This command will create a full site backup.",
      "@acsf-backup",
      "sleep 60 # Waiting for backup.",
      "rm -rf ./acsf-backup",
      "wget --timeout=0 -O acsf-backup.tar.gz $(vendor/bin/AcquiaSiteFactoryCli app:getLatestBackupURL)"
    ],
    "acsf-extract": [
      "if [ ! -f acsf-backup.tar.gz ] ; then `composer acsf-download` ; fi",
      "rm -rf ./acsf-backup",
      "mkdir acsf-backup && tar -zxvf acsf-backup.tar.gz -C acsf-backup"
    ],
    "build-docroot": [
      "if [ ! -d acsf-backup ] ; then `composer acsf-extract` ; fi",
      "rm -rf ./docroot",
      "mv ./acsf-backup/database.sql ./acsf-database.sql",
      "mv ./acsf-backup/docroot ./",
      "rm -rf acsf-backup",
      "cp settings.beetbox.php ./docroot/sites/default/settings.php",
      "if [ ! -d theme-repo ] ; then REPO=`grep theme_repo sitefactory.yml | cut -d' ' -f2` && git clone $REPO theme-repo ; fi",
      "rm -Rf docroot/sites/default/themes/site && ln -s ../../../../theme-repo docroot/sites/default/themes/site"
    ],
    "build-drupal": [
      "if [ ! -f acsf-database.sql ] ; then `composer build-docroot` ; fi",
      "./vendor/bin/drush @govCMS-SaaS-vagrant.local sql-cli < acsf-database.sql",
      "@resetdb"
    ],
    "build-all": [
      "@build-clean",
      "@acsf-backup",
      "sleep 60 # Waiting for backup.",
      "@build-drupal"
    ],
    "resetdb": [
      "@cc",
      "drush @govCMS-SaaS-vagrant.local user-unblock 1",
      "drush @govCMS-SaaS-vagrant.local uli",
      "drush @govCMS-SaaS-vagrant.local -q vset cache 0",
      "drush @govCMS-SaaS-vagrant.local -q vset preprocess_css 0",
      "drush @govCMS-SaaS-vagrant.local -q vset preprocess_js 0",
      "drush @govCMS-SaaS-vagrant.local -q vset page_cache_maximum_age 0",
      "drush @govCMS-SaaS-vagrant.local -q vset views_skip_cache TRUE",
      "drush @govCMS-SaaS-vagrant.local -q vset -y error_level 2",
      "drush @govCMS-SaaS-vagrant.local -q vset theme_debug 1",
      "drush @govCMS-SaaS-vagrant.local dis -y govcms_tweaks, clamav, acsf, acsf_duplication, acsf_openid, acsf_theme, acsf_variables, acsf_pingdom, shield",
      "drush @govCMS-SaaS-vagrant.local en -y devel, dblog",
      "@cc"
    ],
    "cc": [
      "drush @govCMS-SaaS-vagrant.local cc all"
    ],
    "acsf-cc": [
      "vendor/bin/AcquiaSiteFactoryCli app:clearCache"
    ],
    "sync": [
      "@acsf-backup",
      "sleep 60 # Waiting for backup.",
      "@acsf-extract",
      "./vendor/bin/drush @govCMS-SaaS-vagrant.local sql-cli < ./acsf-backup/database.sql",
      "rm -rf acsf-backup",
      "@resetdb"
    ],
    "login": [
      "drush @govCMS-SaaS-vagrant.local uli"
    ]
  },
  "scripts-descriptions": {
    "acsf-test": "* Custom: Determine that you can connect to ACSF with the details in sitefactory.yml.",
    "acsf-backup": "* Custom: Trigger a remote backup - exit immediately, leaving the backup in progress.",
    "acsf-download": "* Custom: Download the latest backup to acsf-backup.tar.gz.",
    "acsf-extract": "* Custom: Unzip the latest downloaded back to ./acsf-backup directory.",
    "build-clean": "* Custom: Removes all the build directories and files.",
    "build-docroot": "* Custom: Move downloaded directories/files to position. Will download backup if needed.",
    "build-drupal": "* Custom: imports an existing local database file, and resets everything for development.",
    "build-all": "* Custom: Cleans up and runs everything from backup to login. Leaves theme-repo directory it if exists.",
    "resetdb": "* Custom: Fix the database to run locally and support development.",
    "sync": "* Custom: Makes a fresh remote backup and imports the database locally.",
    "cc": "* Custom: Cleans local caches.",
    "acsf-cc": "* Custom: Clears remote caches."
  }
}
